-- VHDL Entity MIPS.MIPS_tb.symbol
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--


ENTITY MCU_tb IS
-- Declarations

END MCU_tb ;

--
-- VHDL Architecture MIPS.MIPS_tb.struct
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE work.aux_package.ALL;

LIBRARY work;

ARCHITECTURE struct OF MCU_tb IS

	-- Architecture declarations
	CONSTANT MemWidth		: INTEGER := 8;
	CONSTANT SIM 			: BOOLEAN := TRUE;


	-- Internal signal declarations

   
	SIGNAL HEX0, HEX1, HEX2	: STD_LOGIC_VECTOR(6 DOWNTO 0);
	SIGNAL HEX3, HEX4, HEX5	: STD_LOGIC_VECTOR(6 DOWNTO 0);
	SIGNAL Switches			: STD_LOGIC_VECTOR(7 DOWNTO 0);  
	SIGNAL LEDR       :  std_logic_vector(7 downto 0);
	SIGNAL KEY0,KEY1, KEY2, KEY3: 	STD_LOGIC;
	SIGNAL reset,clock,ena : 		STD_LOGIC;


--  -- Component Declarations
COMPONENT MCU IS
	GENERIC (MemWidth	: INTEGER:= 8;
			  SIM		: BOOLEAN:= FALSE;
			  CtrlBusSize	: integer := 8;
			  AddrBusSize	: integer := 12;
			  DataBusSize	: integer := 32;
			  IrqSize		: integer := 7;
			  RegSize		: integer := 8);

			  
	PORT(clock_OG				    :IN 	STD_LOGIC;
		KEY0,KEY1, KEY2, KEY3		:IN STD_LOGIC;
		CtrlBus						:INOUT STD_LOGIC_VECTOR ( 1 DOWNTO 0 );	
     	AddrBus						:INOUT STD_LOGIC_VECTOR( 11 DOWNTO 0 );
		DataBus						:INOUT STD_LOGIC_VECTOR( 31 DOWNTO 0 ) ;
        HEX0_out, HEX1_out,
		HEX2_out, HEX3_out,
		HEX4_out, HEX5_out			:OUT  std_logic_vector(6 downto 0);
		SW_in                    	:in  std_logic_vector(7 downto 0);
		LEDR_out                    :OUT  std_logic_vector(7 downto 0));
		
END 	COMPONENT;
	
	COMPONENT MCU_tester IS
		GENERIC(IOSize : INTEGER := 8);
		PORT( 
			HEX0, HEX1	: IN	STD_LOGIC_VECTOR(6 DOWNTO 0);
			HEX2, HEX3	: IN	STD_LOGIC_VECTOR(6 DOWNTO 0);
			HEX4, HEX5	: IN	STD_LOGIC_VECTOR(6 DOWNTO 0);
			KEY1,KEY2,KEY3   : OUT   STD_LOGIC;
			Switches	: OUT	STD_LOGIC_VECTOR(7 DOWNTO 0);
			clock       : OUT   STD_LOGIC;
			ena			: OUT   STD_LOGIC;
			reset       : OUT   STD_LOGIC
	   );
	END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : MCU USE ENTITY work.mcu;
   FOR ALL : MCU_tester USE ENTITY work.mcu_tester;
   -- pragma synthesis_on


BEGIN


   -- Instance port mappings.
   MCU_L : MCU
		GENERIC MAP (
			MemWidth => MemWidth,
			SIM 	 => SIM 
		) 
		PORT MAP (
			KEY0   	=> reset,
			clock_OG   	=> clock,
			HEX0_out		=> HEX0,
			HEX1_out		=> HEX1,
			HEX2_out		=> HEX2,
			HEX3_out		=> HEX3,
			HEX4_out		=> HEX4,
			HEX5_out		=> HEX5,
			SW_in			=> Switches,
			KEY1			=> KEY1,
			KEY2 			=> KEY2,
			KEY3			=> KEY3,
			LEDR_out		=> LEDR); 
	  
   U_1 : MCU_tester
		PORT MAP (
			HEX0		=> HEX0,
			HEX1		=> HEX1,
			HEX2		=> HEX2,
			HEX3		=> HEX3,
			HEX4		=> HEX4,
			HEX5		=> HEX5,
			KEY1		=> KEY1,
			KEY2 		=> KEY2,
			KEY3		=> KEY3,
			Switches	=> Switches,
			clock       => clock,
			reset       => reset
		);

END struct;
